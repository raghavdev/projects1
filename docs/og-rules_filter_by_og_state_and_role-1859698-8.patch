From 00e0a0c046449db666695397a19ebe7473f3ee49 Mon Sep 17 00:00:00 2001
From: Jonathan Jordan <jojonaloha@1579186.no-reply.drupal.org>
Date: Fri, 6 Jun 2014 13:31:17 -0500
Subject: [PATCH] Issue #1859698 by jojonaloha, torrance123: Added Filter by
 member-state in rules action "Get group members from group audience".

---
 og.rules.inc | 73 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++----
 1 file changed, 69 insertions(+), 4 deletions(-)

diff --git a/og.rules.inc b/og.rules.inc
index c7eab2e..192911c 100644
--- a/og.rules.inc
+++ b/og.rules.inc
@@ -81,7 +81,38 @@ function og_rules_action_info() {
         'label' => t('Group content'),
         'description' => t('The group content determining the group audience.'),
       ),
-      // @todo: Add option to filter by member-state?
+      'states' => array(
+        'type' => 'list<integer>',
+        'label' => t('Membership states'),
+        'options list' => 'og_group_content_states',
+        'optional' => TRUE,
+        'allow null' => TRUE,
+        'description' => t('Filter group members by membership state. If no states are selected all members are loaded.'),
+      ),
+      'not_states' => array(
+        'type' => 'boolean',
+        'label' => t('Negate membership states'),
+        'optional' => TRUE,
+        'allow null' => FALSE,
+        'description' => t('When checked only users not in the selected states will be loaded.'),
+        'restriction' => 'input',
+      ),
+      'roles' => array(
+        'type' => 'list<text>',
+        'label' => t('Group roles'),
+        'options list' => 'og_rules_group_roles_options_list',
+        'optional' => TRUE,
+        'allow null' => TRUE,
+        'restriction' => 'input',
+      ),
+      'not_roles' => array(
+        'type' => 'boolean',
+        'label' => t('Negate group roles'),
+        'optional' => TRUE,
+        'allow null' => FALSE,
+        'description' => t('When checked only users not in the selected roles will be loaded.'),
+        'restriction' => 'input',
+      ),
     ),
     'provides' => array(
       'group_members' => array('type' => 'list<user>', 'label' => t('List of group members')),
@@ -279,7 +310,7 @@ function og_rules_action_info() {
 /**
  * Action: Get group members from a group content.
  */
-function og_rules_get_members($group_content) {
+function og_rules_get_members($group_content, $states = NULL, $not_states = FALSE, $roles = NULL, $not_roles = FALSE) {
   if (!isset($group_content->og_membership)) {
     // Not a group content.
     return;
@@ -288,11 +319,45 @@ function og_rules_get_members($group_content) {
   $members = array();
   foreach ($group_content->og_membership->value() as $og_membership) {
     // Get the group members the group content belongs to.
-    $current_members = db_select('og_membership', 'om')
+    $query = db_select('og_membership', 'om')
       ->fields('om', array('etid'))
       ->condition('om.gid', $og_membership->gid)
       ->condition('om.group_type', $og_membership->group_type)
-      ->condition('om.entity_type', 'user')
+      ->condition('om.entity_type', 'user');
+
+    if (!empty($states)) {
+      $op = $not_states ? 'NOT IN' : 'IN';
+      $query->condition('om.state', $states, $op);
+    }
+
+    if (!empty($roles)) {
+      $group_roles = og_roles($og_membership->group_type, NULL, $og_membership->gid);
+      $rids = array();
+      foreach ($roles as $role) {
+        $rid = array_search($role, $group_roles);
+        if ($rid !== FALSE) {
+          $rids[] = $rid;
+        }
+      }
+      if (!empty($rids)) {
+        if ($not_roles) {
+          // Use a subquery to find members with the roles we want to exclude,
+          // since members may have multiple roles or no roles at all.
+          $subquery = db_select('og_users_roles', 'our')
+            ->fields('our', array('uid'))
+            ->condition('our.gid', $og_membership->gid)
+            ->condition('our.group_type', $og_membership->group_type)
+            ->condition('our.rid', $rids);
+          $query->condition('om.etid', $subquery, 'NOT IN');
+        }
+        else {
+          $query->innerJoin('og_users_roles', 'our', 'om.etid=our.uid AND om.gid=our.gid AND om.group_type=our.group_type');
+          $query->condition('our.rid', $rids);
+        }
+      }
+    }
+
+    $current_members = $query
       ->execute()
       ->fetchCol();
 
-- 
1.8.5.2 (Apple Git-48)
